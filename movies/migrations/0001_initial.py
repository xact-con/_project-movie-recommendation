# Generated by Django 4.0.5 on 2022-08-12 10:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('actor_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('actor_name', models.CharField(max_length=40, verbose_name='Actor name')),
                ('gender', models.CharField(blank=True, choices=[('M', 'male'), ('F', 'female')], max_length=1, verbose_name='Gender')),
                ('rate', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Actor rate')),
                ('role_count', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Roles count')),
                ('user_rate', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='My actor rate')),
                ('link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='FilmwebCredentials',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('user_name', models.CharField(blank=True, max_length=20)),
                ('cookie', models.CharField(blank=True, max_length=3000)),
                ('user_agent', models.CharField(default='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('movie_id', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='#')),
                ('link', models.URLField(verbose_name='Link')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('title_original', models.CharField(max_length=100, verbose_name='Original title')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Year')),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Movie rate')),
                ('rate_count', models.PositiveIntegerField(verbose_name='Movie rate count')),
                ('critic_rate', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Critic rate')),
                ('award_oscar', models.PositiveSmallIntegerField(verbose_name='Oscars')),
                ('award', models.PositiveSmallIntegerField(verbose_name='Awards')),
                ('nomination', models.PositiveSmallIntegerField(verbose_name='Nominations')),
                ('box_office', models.FloatField(blank=True, null=True, verbose_name='Box office')),
                ('box_office_usa', models.FloatField(blank=True, null=True, verbose_name='Box office (USA)')),
                ('box_office_outside_usa', models.FloatField(blank=True, null=True, verbose_name='Box office (outside USA)')),
                ('budget', models.FloatField(blank=True, null=True, verbose_name='Budget')),
                ('director', models.CharField(max_length=40, verbose_name='Director')),
            ],
        ),
        migrations.CreateModel(
            name='MyRate',
            fields=[
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='my_rates', serialize=False, to='movies.movie')),
                ('rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='My movie rate')),
                ('rate_var', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='WTS',
            fields=[
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='wtss', serialize=False, to='movies.movie')),
                ('who', models.CharField(choices=[('kz', 'kk'), ('kz', 'kk')], max_length=2, verbose_name='Who WTS')),
                ('rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='WTS rate')),
                ('rate_recommended', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
            ],
        ),
        migrations.CreateModel(
            name='Vod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vod', models.CharField(max_length=20, verbose_name='VOD')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vods', to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Role rate')),
                ('rate_count', models.PositiveIntegerField(verbose_name='Role rate count')),
                ('top', models.PositiveIntegerField(blank=True, null=True, verbose_name='TOP actors')),
                ('user_rate', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='My role rate')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='movies.actor')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('genre', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='Genre')),
                ('like', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Genre like')),
                ('short', models.CharField(max_length=5, verbose_name='Genre abbrev.')),
                ('movie', models.ManyToManyField(related_name='genres', to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=30, verbose_name='Country')),
                ('code', models.CharField(max_length=2, verbose_name='County code')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='countries', to='movies.movie')),
            ],
        ),
        migrations.AddField(
            model_name='actor',
            name='movie',
            field=models.ManyToManyField(related_name='actors', through='movies.Role', to='movies.movie'),
        ),
    ]
